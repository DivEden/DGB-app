name: Build Android APK

# Trigger the workflow on push to main branch or manual trigger
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          python3-dev \
          python3-pip \
          python3-setuptools \
          python3-wheel \
          openjdk-17-jdk \
          unzip \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo6 \
          cmake \
          libffi-dev \
          libssl-dev \
          autoconf \
          libtool \
          pkg-config \
          libltdl-dev \
          ccache \
          zip \
          wget \
          curl
          
    - name: Set environment variables
      run: |
        echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
        echo "/usr/lib/jvm/java-17-openjdk-amd64/bin" >> $GITHUB_PATH
        echo "ANDROID_API_LEVEL=31" >> $GITHUB_ENV
        echo "ANDROID_BUILD_TOOLS_VERSION=31.0.0" >> $GITHUB_ENV
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython==0.29.36 python-for-android
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: 11076708
        packages: "platform-tools platforms;android-31 build-tools;31.0.0 ndk;25.2.9519653"
        accept-android-sdk-licenses: true
        
    - name: Set Android environment variables
      run: |
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV
        echo "P4A_ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "P4A_ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV
        echo "BUILDOZER_ANDROID_SDK_PATH=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "BUILDOZER_ANDROID_NDK_PATH=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV
        echo "$ANDROID_SDK_ROOT/build-tools/31.0.0:$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
        
        # Create buildozer config directory and set paths
        mkdir -p ~/.buildozer
        echo "[buildozer]" > ~/.buildozer/config.ini
        echo "android_sdk_path = $ANDROID_SDK_ROOT" >> ~/.buildozer/config.ini
        echo "android_ndk_path = $ANDROID_SDK_ROOT/ndk/25.2.9519653" >> ~/.buildozer/config.ini
        
    - name: Verify Android SDK setup
      shell: bash
      run: |
        echo "=== Android Environment ==="
        echo "Android SDK Root: $ANDROID_SDK_ROOT"
        echo "Android Home: $ANDROID_HOME" 
        echo "Android NDK: $ANDROID_NDK_ROOT"
        echo "PATH: $PATH"
        
        # Check SDK installation
        echo "=== SDK Verification ==="
        echo "SDK directory contents:"
        /bin/ls -la $ANDROID_SDK_ROOT/ 2>/dev/null || find $ANDROID_SDK_ROOT -maxdepth 1 -type d 2>/dev/null || { echo "ERROR: SDK directory not accessible"; exit 1; }
        
        echo "Build tools directory contents:"
        /bin/ls -la $ANDROID_SDK_ROOT/build-tools/ 2>/dev/null || find $ANDROID_SDK_ROOT/build-tools -maxdepth 1 -type d 2>/dev/null || { echo "ERROR: Build tools directory not found"; exit 1; }
        
        echo "Build tools 31.0.0 contents:"
        /bin/ls -la $ANDROID_SDK_ROOT/build-tools/31.0.0/ 2>/dev/null || find $ANDROID_SDK_ROOT/build-tools/31.0.0 -maxdepth 1 -type f 2>/dev/null || { echo "ERROR: Build tools 31.0.0 not found"; exit 1; }
        
        echo "NDK directory contents:"
        /bin/ls -la $ANDROID_SDK_ROOT/ndk/ 2>/dev/null || find $ANDROID_SDK_ROOT/ndk -maxdepth 1 -type d 2>/dev/null || echo "WARNING: NDK directory not found"
        test -d $ANDROID_SDK_ROOT/ndk/25.2.9519653/ && echo "NDK 25.2.9519653 found" || echo "WARNING: NDK 25.2.9519653 not found"
        
        # Verify critical tools exist
        echo "=== Tool Verification ==="
        echo "Checking for aidl:"
        test -f $ANDROID_SDK_ROOT/build-tools/31.0.0/aidl && echo "aidl found" || { echo "ERROR: aidl not found"; exit 1; }
        
        echo "Making aidl executable:"
        chmod +x $ANDROID_SDK_ROOT/build-tools/31.0.0/aidl || { echo "ERROR: Failed to make aidl executable"; exit 1; }
        
        echo "Testing aidl tool:"
        $ANDROID_SDK_ROOT/build-tools/31.0.0/aidl --version 2>/dev/null || echo "WARNING: aidl tool test failed"
        
        echo "=== SDK Setup Complete ==="
        
    - name: Cache buildozer dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.buildozer
          ~/.gradle
          ~/.android
        key: ${{ runner.os }}-buildozer-${{ hashFiles('**/buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-
          
    - name: Build Android APK
      working-directory: ./museum_search_app
      shell: bash
      run: |
        echo "=== Starting APK Build ==="
        pwd
        echo "Directory contents:"
        /bin/ls -la || echo "ls not found, using alternative"
        find . -maxdepth 1 -type f -name "*.py" -o -name "*.spec" || echo "find failed"
        
        echo "=== Final Environment Check ==="
        echo "Android SDK Root: $ANDROID_SDK_ROOT"
        echo "Android Home: $ANDROID_HOME" 
        echo "Android NDK: $ANDROID_NDK_ROOT"
        echo "PATH: $PATH"
        echo "Shell: $SHELL"
        
        # Update buildozer.spec with correct paths
        echo "=== Updating buildozer.spec with SDK paths ==="
        sed -i "s|android.sdk_path =.*|android.sdk_path = $ANDROID_SDK_ROOT|g" buildozer.spec
        sed -i "s|android.ndk_path =.*|android.ndk_path = $ANDROID_NDK_ROOT|g" buildozer.spec
        
        # Verify paths are set correctly
        echo "SDK and NDK paths in buildozer.spec:"
        grep -E "(android.sdk_path|android.ndk_path)" buildozer.spec
        
        echo "=== Buildozer Configuration ==="
        echo "Checking buildozer.spec exists:"
        test -f buildozer.spec && echo "buildozer.spec found" || { echo "ERROR: buildozer.spec not found"; exit 1; }
        
        echo "Checking main.py exists:"
        test -f main.py && echo "main.py found" || { echo "ERROR: main.py not found"; exit 1; }
        
        echo "=== Starting Build Process ==="
        buildozer -v android debug
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: museum-search-app-debug
        path: museum_search_app/bin/*.apk
        retention-days: 30
        
    - name: List build output
      working-directory: ./museum_search_app
      run: |
        echo "Build completed! Generated files:"
        ls -la bin/ || echo "No bin directory found"
        find . -name "*.apk" -type f || echo "No APK files found"