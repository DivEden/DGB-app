name: Build Android APK

# Trigger the workflow on push to main branch or manual trigger
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          python3-dev \
          python3-pip \
          python3-setuptools \
          python3-wheel \
          openjdk-17-jdk \
          unzip \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo6 \
          cmake \
          libffi-dev \
          libssl-dev \
          autoconf \
          libtool \
          pkg-config \
          libltdl-dev \
          ccache \
          zip \
          wget \
          curl
          
    - name: Set environment variables
      run: |
        echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
        echo "/usr/lib/jvm/java-17-openjdk-amd64/bin" >> $GITHUB_PATH
        echo "ANDROID_API_LEVEL=31" >> $GITHUB_ENV
        echo "ANDROID_BUILD_TOOLS_VERSION=31.0.0" >> $GITHUB_ENV
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython==0.29.36 python-for-android
        
    - name: Setup Android SDK licenses
      run: |
        mkdir -p ~/.android
        echo 'count=0' > ~/.android/repositories.cfg
        mkdir -p $HOME/.android/avd
        
    - name: Cache buildozer dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.buildozer
          ~/.gradle
          ~/.android
        key: ${{ runner.os }}-buildozer-${{ hashFiles('**/buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-
          
    - name: Build Android APK
      working-directory: ./museum_search_app
      run: |
        # Make sure we're in the right directory
        pwd
        ls -la
        
        # Set up Android SDK auto-acceptance
        export ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk
        mkdir -p $ANDROID_SDK_ROOT/licenses
        echo "d56f5187479451eabf01fb78af6dfcb131a6481e" > $ANDROID_SDK_ROOT/licenses/android-sdk-license
        echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > $ANDROID_SDK_ROOT/licenses/android-sdk-preview-license
        
        # Clean any previous build attempts
        buildozer android clean || true
        
        # Build the APK with verbose output
        buildozer -v android debug
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: museum-search-app-debug
        path: museum_search_app/bin/*.apk
        retention-days: 30
        
    - name: List build output
      working-directory: ./museum_search_app
      run: |
        echo "Build completed! Generated files:"
        ls -la bin/ || echo "No bin directory found"
        find . -name "*.apk" -type f || echo "No APK files found"